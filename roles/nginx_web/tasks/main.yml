---
- name: Install nginx packages
  ansible.builtin.package:
    state: present
    name:
      - nginx
      - awscli

# this includes proxy for acme-challenge
- name: Install nginx virtualhosts config
  ansible.builtin.template:
    src: virtualhosts.conf
    dest: /etc/nginx/conf.d/
    mode: '0644'
  notify: Restart nginx

# this includes proxy for acme-challenge for default_server
- name: Install nginx default config
  ansible.builtin.template:
    src: nginx.conf
    dest: /etc/nginx/
    mode: '0644'
  notify: Restart nginx

# grab acme.sh repo for ssl management, only on proxy server
- name: Clone acme.sh repo
  ansible.builtin.git:
    repo: 'https://github.com/acmesh-official/acme.sh'
    dest: /home/ender/acme.sh/
  when: not acme_proxy_host

- name: Install acme.sh if not already
  ansible.builtin.command: ./acme.sh --install -m ssl@rexroof.com
  args:
    creates: /home/ender/.acme.sh/acme.sh
    chdir: /home/ender/acme.sh
  when: not acme_proxy_host

# I don't remember why I added this
- name: Update types_hash_max_size
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^ *types_hash_max_size'
    line: "    types_hash_max_size 4096;"
  notify: Restart nginx

- name: Default index.html
  ansible.builtin.copy:
    dest: /usr/share/nginx/html/index.html
    content: |
      {{ hostname | default(inventory_hostname) | default('unset') }}
    mode: '0644'

- name: Change html folder ownership
  ansible.builtin.file:
    state: directory
    path: /usr/share/nginx/html
    recurse: true
    owner: ender
    group: ender
    mode: '0755'

- name: Nginx service
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Cron job for wrecks.dev
  ansible.builtin.cron:
    special_time: hourly
    name: wrecks-dev
    user: ender
    job: >
      AWS_ACCESS_KEY_ID={{ AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY={{ AWS_SECRET_ACCESS_KEY }}
      aws s3 sync --delete
      s3://rexroof/rexroof/wrecks.dev/
      /usr/share/nginx/html/wrecks.dev/

- name: Cron job for rexroof website
  ansible.builtin.cron:
    special_time: hourly
    name: rexroof-website
    user: ender
    job: >
      AWS_ACCESS_KEY_ID={{ AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY={{ AWS_SECRET_ACCESS_KEY }}
      aws s3 sync --delete
      s3://rexroof/rexroof/rexroof.com/
      /usr/share/nginx/html/rexroof.com/

- name: Backup acme.sh folder on acme proxy server
  ansible.builtin.cron:
    special_time: daily
    name: acme-backup
    user: ender
    job: >
      AWS_ACCESS_KEY_ID={{ AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY={{ AWS_SECRET_ACCESS_KEY }}
      aws s3 sync --delete --exact-timestamps
      /home/ender/.acme.sh/
      s3://rexroof-acme-us-east-2/acme.sh/
  when: not acme_proxy_host

- name: Sync acme.sh folder on other servers
  ansible.builtin.cron:
    special_time: daily
    name: acme-sync
    user: ender
    job: >
      AWS_ACCESS_KEY_ID={{ AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY={{ AWS_SECRET_ACCESS_KEY }}
      aws s3 sync --delete --exact-timestamps
      s3://rexroof-acme-us-east-2/acme.sh/
      /home/ender/.acme.sh/
  when: acme_proxy_host

- name: Reload nginx once a day to pick up ssl certs
  ansible.builtin.cron:
    special_time: daily
    name: nginx-reload
    user: root
    job: systemctl reload nginx
